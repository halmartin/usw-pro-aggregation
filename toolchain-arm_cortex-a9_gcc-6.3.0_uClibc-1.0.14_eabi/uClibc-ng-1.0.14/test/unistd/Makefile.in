# uClibc unistd tests
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.

TESTS_DISABLED :=
# If LFS is not set, get rid of all *64 tests up front
ifeq ($(UCLIBC_HAS_LFS),)
TESTS_DISABLED += tst-preadwrite64
endif

# If we don't have LINUX_SPECIFIC, then get rid of tst-fallocate
ifeq ($(UCLIBC_LINUX_SPECIFIC),)
TESTS_DISABLED += tst-fallocate
endif

ifeq ($(TARGET_avr32),y)
TESTS_DISABLED += tst-fallocate tst-posix_fallocate tst-fallocate64
endif

# The logic is similar for HAS_ADVANCED_REALTIME and
# tst-posix_fallocate/tst-posix_fallocate64
ifeq ($(UCLIBC_HAS_ADVANCED_REALTIME),)
TESTS_DISABLED += tst-posix_fallocate
endif

OPTS_getopt      := -abcXXX -9
OPTS_getopt_long := --add XXX --delete YYY --verbose
ifeq ($(UCLIBC_HAS_GNU_GETOPT),y)
OPTS_tstgetopt   := -a -b -cfoobar --required foobar --optional=bazbug --none random --col --color --colour
else
# reordering is not supported, behaves as if POSIXLY_CORRECT would be set
OPTS_tstgetopt   := -a -b -cfoobar --required foobar --optional=bazbug --none --colou --color --colour random
endif

# for embedded systems 4 GB disk space is not available
TESTS_DISABLED += tst-posix_fallocate64 tst-fallocate64

# getconf.c lives in utils/
# Testsuite cannot currently be built with O= anyway, so hardcode path here
getconf.c:
	$(LN_S) ../../utils/$(@F) .
EXTRA_CLEAN    += getconf.c
TESTS_DISABLED += getconf
CFLAGS_getconf = -DGETCONF_DIR='"$(CURDIR)"'
shell_tst-getconf: getconf getconf_glibc
